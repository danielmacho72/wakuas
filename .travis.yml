language: ruby
sudo: required
cache: bundler
bundler_args: '--without production development'
rvm:
  - 2.4.1

services:  
  - docker

env:
  DOCKER_COMPOSE_VERSION: 1.14.0
  POSTGRES_PASSWORD: mysecretpassword3
  SMARTHOST_ADDRESS: smtp.mandrillapp.com
  SMARTHOST_PORT: 587
  SMARTHOST_USER: dani@wakufuro.com
  SMARTHOST_PASSWORD: AWL15ZxwVMe6xUxBqF2z9g
  DOCKER_NETWORK: wakuas_default

before_install:
  # update is required to update the repositories to see the new packages for
  # Docker.
  - sudo apt-get update

  # Now we can install the newer docker-engine which is required for the newer
  # docker-composer we will install next. The messy options are to force it to
  # be non-interactive (normally it asks you a bunch of config questions).
  - sudo apt-get install -o Dpkg::Options::="--force-confold" --force-yes -y docker-ce

  # Let's stop postgresql
  - sudo service postgresql stop
  # wait for postgresql to shutdown
  - while sudo lsof -Pi :5432 -sTCP:LISTEN -t; do sleep 1; done

  # Print out the current docker-compose version. Once this reports 1.6+ then we
  # do not need the following steps.
  - docker-compose --version

  # As of the writing of this script Travis has docker-compose v1.4.2, we need
  # to update it to 1.8+. $DOCKER_COMPOSE_VERSION is provide from the `env`
  # above.
  - sudo rm /usr/local/bin/docker-compose

  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

  # Check that docker-compose is now running the latest version (or at least the
  # one we specified). This is not to be confused with the version we printed
  # before doing the update.
  - docker-compose --version

  # Setup your application stack. You may need to tweak these commands if you
  # doing out-of-the-ordinary docker-compose builds.
  - docker-compose pull
  - docker-compose build
  - docker-compose run auth bash -c "sleep 3 && rake db:setup"
  - docker-compose start

  # You will want this for logging. If one of your containers does not build for
  # whatever reason it's best to report that now before your tests start
  # otherwise it can be really tricky to debug why tests are failing sometimes.
  - docker ps

  # This is just our script to setup all the database tables and other fixtures
  # we need. You should remove this if it's not necessary or you have other
  # scripts handling this.
  #- docker/web/provision.sh

script:
  - docker version
  - docker-compose version
  - docker ps
  - docker ps | grep auth
  - docker_auth=$(docker ps|grep auth|rev|cut -d' ' -f 1 | rev)
  - docker exec -it $docer_auth rake
